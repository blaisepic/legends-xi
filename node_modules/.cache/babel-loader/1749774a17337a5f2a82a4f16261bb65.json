{"ast":null,"code":"var _jsxFileName = \"/home/blaise/the_odin_project/legends-xi/src/components/BasicTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useMemo } from 'react';\nimport { useTable } from 'react';\nimport MOCK_DATA from \"./MOCK.DATA.json\";\nimport { COLUMNS } from './COLUMNS.js';\nimport './table.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BasicTable = () => {\n  _s();\n\n  const columns = useMemo(() => COLUMNS, []);\n  const data = useMemo(() => MOCK_DATA, []);\n  const tableInstance = useTable({\n    columns: columns,\n    data: data\n  });\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = tableInstance;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", { ...getTableProps(),\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps,\n          children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", { ...column.getHeaderProps(),\n            children: column.render('Header')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 41\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n        children: rows.map(row => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n            children: row.cells.map(cell => {\n              return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n                children: cell.render('Cell')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 52\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n\n_s(BasicTable, \"pjBIPaRCpDJjOFbWNcaYNCnHqio=\", false, function () {\n  return [useTable];\n});\n\n_c = BasicTable;\nexport default BasicTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicTable\");","map":{"version":3,"sources":["/home/blaise/the_odin_project/legends-xi/src/components/BasicTable.js"],"names":["React","Component","useMemo","useTable","MOCK_DATA","COLUMNS","BasicTable","columns","data","tableInstance","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,OAA1B,QAAwC,OAAxC;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,SAAQC,OAAR,QAAsB,cAAtB;AACA,OAAO,aAAP;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACrB,QAAMC,OAAO,GAAGL,OAAO,CAAC,MAAMG,OAAP,EAAgB,EAAhB,CAAvB;AACA,QAAMG,IAAI,GAAGN,OAAO,CAAC,MAAME,SAAP,EAAkB,EAAlB,CAApB;AAEA,QAAMK,aAAa,GAAGN,QAAQ,CAAC;AAC3BI,IAAAA,OAAO,EAAEA,OADkB;AAE3BC,IAAAA,IAAI,EAAEA;AAFqB,GAAD,CAA9B;AAKA,QAAM;AAACE,IAAAA,aAAD;AAAgBC,IAAAA,iBAAhB;AAAmCC,IAAAA,YAAnC;AAAiDC,IAAAA,IAAjD;AAAuDC,IAAAA;AAAvD,MAAqEL,aAA3E;AACA,sBACI;AAAA,2BACI,sBAAWC,aAAa,EAAxB;AAAA,8BACI;AAAA,kBAEQE,YAAY,CAACG,GAAb,CAAkBC,WAAD,iBACb,mBAAQA,WAAW,CAACC,mBAApB;AAAA,oBAEQD,WAAW,CAACE,OAAZ,CAAoBH,GAApB,CAAyBI,MAAD,iBACpB,mBAAQA,MAAM,CAACC,cAAP,EAAR;AAAA,sBAAkCD,MAAM,CAACE,MAAP,CAAc,QAAd;AAAlC;AAAA;AAAA;AAAA;AAAA,kBADJ;AAFR;AAAA;AAAA;AAAA;AAAA,gBADJ;AAFR;AAAA;AAAA;AAAA;AAAA,cADJ,eAgBI,sBAAWV,iBAAiB,EAA5B;AAAA,kBAEQE,IAAI,CAACE,GAAL,CAAUO,GAAD,IAAS;AACdR,UAAAA,UAAU,CAACQ,GAAD,CAAV;AACA,8BACI,mBAAQA,GAAG,CAACC,WAAJ,EAAR;AAAA,sBAEQD,GAAG,CAACE,KAAJ,CAAUT,GAAV,CAAeU,IAAD,IAAU;AACpB,kCAAO,mBAAQA,IAAI,CAACC,YAAL,EAAR;AAAA,0BAA8BD,IAAI,CAACJ,MAAL,CAAY,MAAZ;AAA9B;AAAA;AAAA;AAAA;AAAA,sBAAP;AACH,aAFD;AAFR;AAAA;AAAA;AAAA;AAAA,kBADJ;AASH,SAXD;AAFR;AAAA;AAAA;AAAA;AAAA,cAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAqCH,CA/CD;;GAAMf,U;UAIoBH,Q;;;KAJpBG,U;AAiDN,eAAeA,UAAf","sourcesContent":["import React, {Component, useMemo} from 'react';\nimport {useTable} from 'react';\nimport MOCK_DATA from \"./MOCK.DATA.json\";\nimport {COLUMNS} from './COLUMNS.js';\nimport './table.css'\n\nconst BasicTable = () => {\n    const columns = useMemo(() => COLUMNS, []);\n    const data = useMemo(() => MOCK_DATA, []);\n\n    const tableInstance = useTable({\n        columns: columns,\n        data: data\n    });\n\n    const {getTableProps, getTableBodyProps, headerGroups, rows, prepareRow} = tableInstance;\n    return(\n        <div>\n            <table {...getTableProps()}>\n                <thead>\n                    {\n                        headerGroups.map((headerGroup) => (\n                            <tr {...headerGroup.getHeaderGroupProps}>\n                                {\n                                    headerGroup.headers.map((column) => (\n                                        <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n                                    ))\n                                }\n                                \n                            </tr>\n                        ))\n                    }\n                </thead>\n\n                <tbody {...getTableBodyProps()}>\n                    {\n                        rows.map((row) => {\n                            prepareRow(row);\n                            return (\n                                <tr {...row.getRowProps()}>\n                                    {\n                                        row.cells.map((cell) => {\n                                            return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                                        })\n                                    }\n                                </tr>\n                            )\n                        })\n                    }\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\nexport default BasicTable;"]},"metadata":{},"sourceType":"module"}