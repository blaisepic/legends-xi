{"ast":null,"code":"var _jsxFileName = \"/home/blaise/the_odin_project/legends-xi/src/App.js\";\nimport './style.css';\nimport React, { Component } from 'react'; // import ReactScrollableList from './components/scrollable';\n\nimport './Data'; // import {listItems} from './Data';\n//for access, make the div's #id the key in the listItems dict.\n// use that key to access the item somehow..\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconsole.log(\"Accessing...\");\nconsole.log();\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.handleCallback = childData => {\n      this.setState({\n        jerseyColor: childData\n      });\n      console.log(\"in Container: \");\n      console.log(childData);\n    };\n\n    this.state = {\n      jerseyColor: \"#000000\"\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(TeamInfo, {\n        parentCallback: this.handleCallback\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TeamData, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        parentData: this.state.jerseyColor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PlayerData, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass TeamInfo extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleCallback = childData => {\n      this.setState({\n        jerseyColor: childData\n      });\n      this.props.parentCallback(childData);\n      console.log(\"in TeamInfo: \");\n      console.log(childData);\n    };\n\n    this.state = {\n      jerseyColor: \"\"\n    };\n  } //TODO: when this is called, pass the jerseyColor to the parent so we can\n  // apply it the circles\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"team-info-container\",\n      children: [/*#__PURE__*/_jsxDEV(TeamInput, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(JerseyColor, {\n        parentCallback: this.handleCallback\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass TeamData extends Component {\n  constructor() {\n    super();\n    this.state = {};\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: 'salmon'\n      },\n      className: \"team-data-container\",\n      children: [/*#__PURE__*/_jsxDEV(PlayersSelected, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Budget, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass PlayerData extends Component {\n  constructor() {\n    super();\n    this.state = {};\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player-data-container\",\n      children: [/*#__PURE__*/_jsxDEV(FreezePane, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ScrollList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass FreezePane extends Component {\n  constructor() {\n    super();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"freeze-pane\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"freeze-pane-item\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"freeze-pane-item\",\n        children: \"Pos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"freeze-pane-item\",\n        children: \"Price\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this);\n  }\n\n} // TODO: \n// 1. freeze top pane -- use grid-container implementation\n// 2. columns, actual columns (..or, whole objects with illusion of cols)\n// 3. styling\n// 4. size (can I make it 100%?)\n// 5. replace 'id' with 'key'\n// test: If I click Pele's name, can I access all of his data?\n// this would allow me to separate the player data into three columns\n\n\nclass ScrollList extends Component {\n  constructor() {\n    super();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scroller\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this) // <ReactScrollableList\n    //   listItems={listItems}\n    //   heightOfItem={5}\n    //   maxItemsToRender={20}\n    //   style={{ color: '#333' }}\n    // />\n    ;\n  }\n\n}\n\nclass TeamInput extends Component {\n  constructor() {\n    super();\n\n    this.handleChange = e => {\n      this.setState({\n        text: e.target.value\n      });\n    };\n\n    this.state = {\n      text: \"\"\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"teamInput\",\n        children: \"Team name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"teamInput\",\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this);\n  }\n\n} // The value of an <input> element of type color is always a DOMString which\n//  contains a 7-character string specifying an RGB color in hexadecimal \n//  format. While you can input the color in either upper- or lower-case, \n//  it will be stored in lower-case form. \n// ex: red = '#ff0000'\n// TODO: pass color to parent\n\n\nclass JerseyColor extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      this.setState({\n        jerseyColor: e.target.value\n      });\n      this.props.parentCallback(this.state.jerseyColor);\n      console.log(\"in JerseyColor: \");\n      console.log(this.state.jerseyColor);\n    };\n\n    this.state = {\n      jerseyColor: \"\"\n    };\n  } //TODO: only handleChange when the user has left...\n  //not when they are dragging the color wheel around\n  // a transition effect for the 'jerseys' (circle) with a delay\n  // should resolve this\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"jerseyColor\",\n        children: \"Jersey Color:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"color\",\n        id: \"jerseyColor\",\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Field extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      jerseyColor: this.props.parentData\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.parentData !== prevProps.parentData) {\n      this.setState({\n        jerseyColor: this.props.parentData\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"field\",\n      children: [/*#__PURE__*/_jsxDEV(Circle, {\n        classNames: \"circle goalkeeper\",\n        parentData: this.state.jerseyColor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"defense flex-box\",\n        children: [/*#__PURE__*/_jsxDEV(Circle, {\n          classNames: \"circle defender\",\n          parentData: this.state.jerseyColor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Circle, {\n          classNames: \"circle defender\",\n          parentData: this.state.jerseyColor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Circle, {\n          classNames: \"circle defender\",\n          parentData: this.state.jerseyColor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"midfield flex-box\",\n        children: [/*#__PURE__*/_jsxDEV(Circle, {\n          classNames: \"circle midfielder\",\n          parentData: this.state.jerseyColor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Circle, {\n          classNames: \"circle midfielder\",\n          parentData: this.state.jerseyColor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Circle, {\n          classNames: \"circle midfielder\",\n          parentData: this.state.jerseyColor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Circle, {\n          classNames: \"circle midfielder\",\n          parentData: this.state.jerseyColor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"offense flex-box\",\n        children: [/*#__PURE__*/_jsxDEV(Circle, {\n          classNames: \"circle forward\",\n          parentData: this.state.jerseyColor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Circle, {\n          classNames: \"circle forward\",\n          parentData: this.state.jerseyColor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Circle, {\n          classNames: \"circle forward\",\n          parentData: this.state.jerseyColor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nclass Circle extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      jerseyColor: this.props.parentData\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.parentData !== prevProps.parentData) {\n      this.setState({\n        jerseyColor: this.props.parentData\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: this.props.classNames,\n      style: {\n        backgroundColor: this.state.jerseyColor\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 7\n    }, this);\n  }\n\n} //TODO: where should the increment() go?\n\n\nclass PlayersSelected extends Component {\n  constructor() {\n    super();\n    this.state = {\n      playersOnTeam: 0\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"players-selected\",\n      children: [\"Players selected: \", this.state.playersOnTeam, \"/11\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Budget extends Component {\n  constructor() {\n    super();\n    this.state = {\n      budget: 100\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"budget\",\n      children: [\"Budget: \", this.state.budget, \"m\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/blaise/the_odin_project/legends-xi/src/App.js"],"names":["React","Component","console","log","App","constructor","handleCallback","childData","setState","jerseyColor","state","render","TeamInfo","props","parentCallback","TeamData","backgroundColor","PlayerData","FreezePane","ScrollList","TeamInput","handleChange","e","text","target","value","JerseyColor","Field","parentData","componentDidUpdate","prevProps","Circle","classNames","PlayersSelected","playersOnTeam","Budget","budget"],"mappings":"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","sourcesContent":["import './style.css';\nimport React, {Component} from 'react';\n// import ReactScrollableList from './components/scrollable';\nimport './Data';\n// import {listItems} from './Data';\n\n//for access, make the div's #id the key in the listItems dict.\n// use that key to access the item somehow..\nconsole.log(\"Accessing...\");\nconsole.log()\n\nclass App extends Component {\n  constructor(){\n    super();\n\n    this.state = {\n      jerseyColor: \"#000000\",\n    };\n  }\n\n  handleCallback = (childData) => {\n    this.setState({jerseyColor: childData})\n    console.log(\"in Container: \");\n    console.log(childData);\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <TeamInfo parentCallback = {this.handleCallback}></TeamInfo>\n        <TeamData></TeamData>\n        <Field parentData = {this.state.jerseyColor}></Field>\n        <PlayerData></PlayerData>\n\n      </div>\n    );\n  }\n}\n\nclass TeamInfo extends Component{\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      jerseyColor: \"\",\n    };\n  }\n\n  //TODO: when this is called, pass the jerseyColor to the parent so we can\n  // apply it the circles\n  handleCallback = (childData) => {\n    this.setState({jerseyColor: childData})\n    this.props.parentCallback(childData);\n\n    console.log(\"in TeamInfo: \");\n    console.log(childData);\n  }\n\n  render() {\n    return(\n      <div className=\"team-info-container\">\n          <TeamInput></TeamInput>\n          <JerseyColor parentCallback = {this.handleCallback}></JerseyColor>\n      </div>\n    )\n  }\n}\n\nclass TeamData extends Component{\n  constructor() {\n    super();\n\n    this.state = {\n\n    };\n  }\n\n  render() {\n    return(\n      <div \n        style={{ backgroundColor: 'salmon' }}\n        className=\"team-data-container\">\n          <PlayersSelected></PlayersSelected>\n          <Budget></Budget>\n      </div>\n    )\n  }\n}\n\nclass PlayerData extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n\n    };\n  }\n\n  render() {\n    return(\n      <div className=\"player-data-container\">\n        <FreezePane></FreezePane>\n        <ScrollList></ScrollList>\n      </div>\n    );\n  }\n}\n\nclass FreezePane extends Component {\n  constructor() {\n    super();\n  }\n\n  render() {\n    return(\n      <div className=\"freeze-pane\">\n        <div className=\"freeze-pane-item\">Name</div>\n        <div className=\"freeze-pane-item\">Pos</div>\n        <div className=\"freeze-pane-item\">Price</div>\n      </div>\n    );\n  }\n}\n// TODO: \n  // 1. freeze top pane -- use grid-container implementation\n  // 2. columns, actual columns (..or, whole objects with illusion of cols)\n  // 3. styling\n  // 4. size (can I make it 100%?)\n  // 5. replace 'id' with 'key'\n  // test: If I click Pele's name, can I access all of his data?\n    // this would allow me to separate the player data into three columns\nclass ScrollList extends Component {\n  constructor() {\n    super();\n  }\n\n  render() {\n    return(\n      <div className=\"scroller\">\n        {/* {listItems.map((player) => {\n          return(\n            <div className=\"item\">Name: {player.name}. POS: {player.pos} OVR: {player.ovr}</div>\n          );\n        })} */}\n      </div>\n        // <ReactScrollableList\n        //   listItems={listItems}\n        //   heightOfItem={5}\n        //   maxItemsToRender={20}\n        //   style={{ color: '#333' }}\n        // />\n    );\n  }\n}\n\nclass TeamInput extends Component {\n  constructor(){\n    super();\n\n    this.state = {\n      text: \"\",\n    };\n  }\n\n  handleChange = (e) => {\n    this.setState({text:e.target.value})\n  }\n\n  render() {\n    return(\n      <div>\n        <label for=\"teamInput\">Team name:</label>\n        <input type=\"text\" id=\"teamInput\" onChange= {this.handleChange}></input>\n      </div>\n    );\n  }\n}\n\n// The value of an <input> element of type color is always a DOMString which\n//  contains a 7-character string specifying an RGB color in hexadecimal \n//  format. While you can input the color in either upper- or lower-case, \n//  it will be stored in lower-case form. \n// ex: red = '#ff0000'\n// TODO: pass color to parent\nclass JerseyColor extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      jerseyColor: \"\",\n    };\n  }\n\n  //TODO: only handleChange when the user has left...\n  //not when they are dragging the color wheel around\n  // a transition effect for the 'jerseys' (circle) with a delay\n  // should resolve this\n  handleChange = (e) => {\n    this.setState({jerseyColor: e.target.value});\n    this.props.parentCallback(this.state.jerseyColor);\n    console.log(\"in JerseyColor: \");\n    console.log(this.state.jerseyColor)\n  }\n\n  render() {\n    return(\n      <div>\n        <label for=\"jerseyColor\">Jersey Color:</label>\n        <input type=\"color\" id=\"jerseyColor\"\n        onChange= {this.handleChange}></input>\n      </div>\n    );\n  }\n}\n\nclass Field extends Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      jerseyColor: this.props.parentData,\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if(this.props.parentData !== prevProps.parentData){\n      this.setState({jerseyColor: this.props.parentData})\n    }\n  }\n\n  render() {\n    return(\n        <div className=\"field\">\n          <Circle classNames=\"circle goalkeeper\" \n          parentData = {this.state.jerseyColor}\n          ></Circle>\n\n          <div className=\"defense flex-box\">\n            <Circle classNames=\"circle defender\"\n            parentData = {this.state.jerseyColor}\n            ></Circle>\n            <Circle classNames=\"circle defender\"\n            parentData = {this.state.jerseyColor}\n            ></Circle>\n            <Circle classNames=\"circle defender\"\n            parentData = {this.state.jerseyColor}\n            ></Circle>\n          </div>\n\n          <div className=\"midfield flex-box\">\n            <Circle classNames=\"circle midfielder\"\n            parentData = {this.state.jerseyColor}\n            ></Circle>\n            <Circle classNames=\"circle midfielder\"\n            parentData = {this.state.jerseyColor}\n            ></Circle>\n            <Circle classNames=\"circle midfielder\"\n            parentData = {this.state.jerseyColor}\n            ></Circle>\n            <Circle classNames=\"circle midfielder\"\n            parentData = {this.state.jerseyColor}\n            ></Circle>\n          </div>\n\n          <div className=\"offense flex-box\">\n            <Circle classNames=\"circle forward\"\n            parentData = {this.state.jerseyColor}\n            ></Circle>\n            <Circle classNames=\"circle forward\"\n            parentData = {this.state.jerseyColor}\n            ></Circle>\n            <Circle classNames=\"circle forward\"\n            parentData = {this.state.jerseyColor}\n            ></Circle>\n          </div>\n\n        </div>\n    );\n  }\n}\n\nclass Circle extends Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      jerseyColor: this.props.parentData,\n    };\n  }\n\n  componentDidUpdate(prevProps){\n    if(this.props.parentData !== prevProps.parentData) {\n      this.setState({jerseyColor: this.props.parentData})\n    }\n  }\n\n  render() {\n    return(\n      <div \n        className={this.props.classNames}\n        style={{ backgroundColor: this.state.jerseyColor }}\n        ></div>\n    );\n  }\n}\n\n//TODO: where should the increment() go?\nclass PlayersSelected extends Component {\n  constructor(){\n    super();\n\n    this.state = {\n      playersOnTeam: 0,\n    }\n  }\n\n  render() {\n    return(\n      <div className=\"players-selected\">\n        Players selected: {this.state.playersOnTeam}/11\n        </div>\n    );\n  }\n}\n\nclass Budget extends Component {\n  constructor(){\n    super();\n\n    this.state = {\n      budget: 100,\n    }\n\n  }\n\n  render() {\n    return(\n      <div className=\"budget\">\n        Budget: {this.state.budget}m\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}