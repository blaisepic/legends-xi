{"ast":null,"code":"var _jsxFileName = \"/home/blaise/the_odin_project/legends-xi/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport './style.css';\nimport React, { Component, useState, useRef, useEffect } from 'react'; // import ReactScrollableList from './components/scrollable';\n\nimport './Data';\nimport { listVals } from './Data';\nimport { listKeys } from './Data';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport BasicTable from './components/BasicTable';\nimport FilteringTable from './components/FilteringTable';\nimport SortingTable from './components/SortingTable';\nimport MOCK_DATA from \"./components/MOCK.DATA.json\";\nimport AlertDialog from './components/Dialog'; //for access, make the div's #id the key in the listItems dict.\n// use that key to access the item somehow..\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.handleCallback = childData => {\n      this.setState({\n        jerseyColor: childData\n      });\n    };\n\n    this.handleCallbackPlayer = (playerName, playerPos) => {\n      this.setState({\n        currPlayer: playerName,\n        currPlayerPos: playerPos\n      });\n    };\n\n    this.handleCallbackBudget = childData => {\n      this.setState({\n        budget: childData\n      });\n    };\n\n    this.state = {\n      jerseyColor: \"#000000\",\n      currPlayer: \"\",\n      currPlayerPos: \"\",\n      budget: 100\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      id: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(TeamInfo, {\n        parentCallback: this.handleCallback\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TeamData, {\n        parentCallback: this.handleCallbackBudget\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        parentPlayerName: this.state.currPlayer,\n        parentPlayerPos: this.state.currPlayerPos,\n        parentData: this.state.jerseyColor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PlayerData, {\n        parentCallback: this.handleCallbackPlayer,\n        parentData: this.state.budget\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass TeamInfo extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleCallback = childData => {\n      this.setState({\n        jerseyColor: childData\n      });\n      this.props.parentCallback(childData);\n    };\n\n    this.state = {\n      jerseyColor: \"\"\n    };\n  } //TODO: when this is called, pass the jerseyColor to the parent so we can\n  // apply it the circles\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"team-info-container\",\n      children: [/*#__PURE__*/_jsxDEV(TeamInput, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(JerseyColor, {\n        parentCallback: this.handleCallback\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass TeamData extends Component {\n  constructor() {\n    super();\n\n    this.handleCallback = childData => {\n      this.props.parentCallback(childData);\n    };\n\n    this.state = {};\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: 'salmon'\n      },\n      className: \"team-data-container\",\n      children: [/*#__PURE__*/_jsxDEV(PlayersSelected, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Budget, {\n        parentCallback: this.handleCallback\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass PlayerData extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleCallback = (playerName, playerPos) => {\n      this.props.parentCallback(playerName, playerPos);\n    };\n\n    this.componentDidUpdate = prevProps => {\n      if (this.props.parentData !== prevProps.parentData) {\n        this.setState({\n          budget: this.props.parentData\n        });\n      }\n    };\n\n    this.state = {\n      budget: 100\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player-data-container\",\n      children: /*#__PURE__*/_jsxDEV(ScrollList, {\n        parentCallback: this.handleCallback,\n        parentData: this.state.budget\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass FreezePane extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleCallback = childData => {\n      this.props.parentCallback(childData);\n    };\n\n    this.state = {};\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"freeze-pane\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"freeze-pane-item\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"freeze-pane-item\",\n        children: /*#__PURE__*/_jsxDEV(PosFilter, {\n          parentCallback: this.handleCallback,\n          className: \"freeze-pane-item\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"freeze-pane-item\",\n        children: \"Price\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass ScrollList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleCallback = (childDataName, childDataPrice, childDataPos) => {\n      this.setState({\n        currPlayer: childDataName,\n        currPlayerPrice: childDataPrice,\n        currPlayerPos: childDataPos\n      });\n    };\n\n    this.componentDidUpdate = prevProps => {\n      if (this.props.parentData !== prevProps.parentData) {\n        this.setState({\n          budget: this.props.parentData\n        });\n      }\n    };\n\n    this.addPlayer = (playerName, playerPos) => {\n      this.props.parentCallback(playerName, playerPos);\n    };\n\n    this.state = {\n      currPlayer: \"\",\n      currPlayerPrice: 0,\n      currPlayerPos: \"\",\n      budget: 100\n    };\n  }\n\n  render() {\n    let count = 0;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scroller\",\n      children: [/*#__PURE__*/_jsxDEV(AlertDialog, {\n        addPlayerCallback: this.addPlayer,\n        playerName: this.state.currPlayer,\n        playerPos: this.state.currPlayerPos,\n        playerPrice: this.state.currPlayerPrice,\n        budget: this.state.budget,\n        className: \"dialog\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SortingTable, {\n        parentCallback: this.handleCallback,\n        id: \"table\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass PosFilter extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = e => {\n      this.setState({\n        filterByPos: e.target.outerText\n      });\n      this.props.parentCallback(e.target.outerText);\n    };\n\n    this.state = {\n      filterByPos: \"\"\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(DropdownButton, {\n      id: \"dropdown-basic-button\",\n      title: \"Pos\",\n      children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n        href: \"#/action-1\",\n        onClick: this.handleClick,\n        children: \"F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n        href: \"#/action-2\",\n        onClick: this.handleClick,\n        children: \"MID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n        href: \"#/action-3\",\n        children: \"DEF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n        href: \"#/action-3\",\n        children: \"GK\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nclass TeamInput extends Component {\n  constructor() {\n    super();\n\n    this.handleChange = e => {\n      this.setState({\n        text: e.target.value\n      });\n    };\n\n    this.state = {\n      text: \"\"\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"teamInput\",\n        children: \"Team name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"teamInput\",\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this);\n  }\n\n} // ex value: red = '#ff0000'\n\n\nclass JerseyColor extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      this.setState({\n        jerseyColor: e.target.value\n      });\n      this.props.parentCallback(this.state.jerseyColor);\n    };\n\n    this.state = {\n      jerseyColor: \"\"\n    };\n  } //TODO: only handleChange when the user has left...\n  //not when they are dragging the color wheel around\n  // a transition effect for the 'jerseys' (circle) with a delay\n  // should resolve this\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"jerseyColor\",\n        children: \"Jersey Color:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"color\",\n        id: \"jerseyColor\",\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }, this);\n  }\n\n} // CURRENT TASK: figure out how to check whether a circle is filled\n\n\nconst Field = props => {\n  _s();\n\n  const [jerseyColor, setJerseyColor] = useState(props.parentData);\n  const [currPlayer, setCurrPlayer] = useState(props.parentPlayerName);\n  const [currPlayerPos, setCurrPlayerPos] = useState(props.parentPlayerPos);\n  useEffect(() => {\n    setJerseyColor(props.parentData);\n  }, [props.parentData]);\n  useEffect(() => {\n    setCurrPlayer(props.parentPlayerName);\n    setCurrPlayerPos(props.parentPlayerPos);\n    addPlayer(props.parentPlayerName, props.parentPlayerPos);\n  }, [props.parentPlayerName]);\n\n  function addPlayer(name, pos) {\n    //TODO: see if there's a way to make this NOT call upon initial render. See line 301, using callback functions\n    let newPos = \"test\";\n    if (pos == 'GK') newPos = \"goalkeeper\";\n    if (pos == 'D') newPos = 'defender';\n    if (pos == 'M') newPos = 'midfielder';\n    if (pos == 'F') newPos = 'forward'; //CURRENT TASK: see code here\n\n    let elements = document.querySelectorAll(`.${newPos}`);\n    elements = Array.from(elements);\n    console.log(elements);\n    elements.every(e => {\n      if (e.classList.value.includes(\"filled\")) {\n        //do nothing, the current pos is already occupied\n        console.log(\"element is filled, doing nothing...\");\n      } else {\n        console.log(\"element not filled, doing something...\");\n        e.classList.add(\"filled\"); // add to current circle the playerName\n\n        return false;\n      }\n    });\n  } // 1. check if player already, if so, don't do anything\n  // 2. if not current player (else), and if positions are available, then add him to the 1st available circle \n  // 3. must return adjusted budget if player is successfully added\n  // MUST DO: figure out where to place add function. I need to access the filled property to determine if a circle can be occupied or if I must check the next\n  // MUST DO: use position to check whether we should be calling into gk, def, mid, or forward\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"field\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gk-flex flex-box\",\n      children: /*#__PURE__*/_jsxDEV(Circle, {\n        classNames: \"circle goalkeeper\",\n        parentData: jerseyColor,\n        filled: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"defense flex-box\",\n      children: [/*#__PURE__*/_jsxDEV(Circle, {\n        classNames: \"circle defender\",\n        parentData: jerseyColor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Circle, {\n        classNames: \"circle defender\",\n        parentData: jerseyColor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Circle, {\n        classNames: \"circle defender\",\n        parentData: jerseyColor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"midfield flex-box\",\n      children: [/*#__PURE__*/_jsxDEV(Circle, {\n        classNames: \"circle midfielder\",\n        parentData: jerseyColor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Circle, {\n        classNames: \"circle midfielder\",\n        parentData: jerseyColor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Circle, {\n        classNames: \"circle midfielder\",\n        parentData: jerseyColor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Circle, {\n        classNames: \"circle midfielder\",\n        parentData: jerseyColor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"offense flex-box\",\n      children: [/*#__PURE__*/_jsxDEV(Circle, {\n        classNames: \"circle forward\",\n        parentData: jerseyColor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Circle, {\n        classNames: \"circle forward\",\n        parentData: jerseyColor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Circle, {\n        classNames: \"circle forward\",\n        parentData: jerseyColor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 337,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Field, \"STGcBEcTUF/x46tHosBxQC/+1iI=\");\n\n_c = Field;\n\nconst Circle = props => {\n  _s2();\n\n  const [jerseyColor, setJerseyColor] = useState(props.parentData);\n  const [filled, setFilled] = useState(false);\n  const [playerName, setPlayerName] = useState(\"\");\n  useEffect(() => {\n    setJerseyColor(props.parentData);\n  }, props.parentData);\n  useEffect(() => {});\n  const thisRef = useRef();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: thisRef,\n      className: props.classNames,\n      style: {\n        backgroundColor: jerseyColor\n      },\n      onClick: () => console.log(thisRef)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"circleText\",\n      children: playerName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 405,\n    columnNumber: 5\n  }, this);\n}; //TODO: where should the increment() go?\n\n\n_s2(Circle, \"z1neCGsFmYU5SRGHzeDZijFdx2s=\");\n\n_c2 = Circle;\n\nclass PlayersSelected extends Component {\n  constructor() {\n    super();\n    this.state = {\n      playersOnTeam: 0\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"players-selected\",\n      children: [\"Players selected: \", this.state.playersOnTeam, \"/11\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Budget extends Component {\n  constructor() {\n    super();\n    this.state = {\n      budget: 100\n    };\n  } // TODO: componentDidUpdate()\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"budget\",\n      onChange: () => this.props.parentCallback(this.state.budget),\n      children: [\"Budget: \", this.state.budget, \"m\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Field\");\n$RefreshReg$(_c2, \"Circle\");","map":{"version":3,"sources":["/home/blaise/the_odin_project/legends-xi/src/App.js"],"names":["React","Component","useState","useRef","useEffect","listVals","listKeys","DropdownButton","Dropdown","BasicTable","FilteringTable","SortingTable","MOCK_DATA","AlertDialog","App","constructor","handleCallback","childData","setState","jerseyColor","handleCallbackPlayer","playerName","playerPos","currPlayer","currPlayerPos","handleCallbackBudget","budget","state","render","TeamInfo","props","parentCallback","TeamData","backgroundColor","PlayerData","componentDidUpdate","prevProps","parentData","FreezePane","ScrollList","childDataName","childDataPrice","childDataPos","currPlayerPrice","addPlayer","count","PosFilter","handleClick","e","filterByPos","target","outerText","TeamInput","handleChange","text","value","JerseyColor","Field","setJerseyColor","setCurrPlayer","parentPlayerName","setCurrPlayerPos","parentPlayerPos","name","pos","newPos","elements","document","querySelectorAll","Array","from","console","log","every","classList","includes","add","Circle","filled","setFilled","setPlayerName","thisRef","classNames","PlayersSelected","playersOnTeam","Budget"],"mappings":"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","sourcesContent":["import './style.css';\nimport React, {Component, useState, useRef, useEffect} from 'react';\n// import ReactScrollableList from './components/scrollable';\nimport './Data';\nimport {listVals} from './Data';\nimport {listKeys} from './Data';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport BasicTable from './components/BasicTable';\nimport FilteringTable from './components/FilteringTable';\nimport SortingTable from './components/SortingTable';\nimport MOCK_DATA from \"./components/MOCK.DATA.json\";\nimport AlertDialog from './components/Dialog'\n\n//for access, make the div's #id the key in the listItems dict.\n// use that key to access the item somehow..\n\n\nclass App extends Component {\n  constructor(){\n    super();\n\n    this.state = {\n      jerseyColor: \"#000000\",\n      currPlayer: \"\",\n      currPlayerPos: \"\",\n      budget: 100\n    };\n  }\n\n  handleCallback = (childData) => {\n    this.setState({jerseyColor: childData})\n  }\n\n  handleCallbackPlayer = (playerName, playerPos) => {\n    this.setState({currPlayer: playerName, \n    currPlayerPos: playerPos});\n  }\n\n  handleCallbackBudget = (childData) => {\n    this.setState({budget: childData});\n  }\n\n  render() {\n    return (\n      <div className=\"container\" id=\"container\">\n        <TeamInfo parentCallback = {this.handleCallback}></TeamInfo>\n        <TeamData parentCallback = {this.handleCallbackBudget}></TeamData>\n        <Field parentPlayerName = {this.state.currPlayer} parentPlayerPos = {this.state.currPlayerPos} parentData = {this.state.jerseyColor}></Field>\n        <PlayerData parentCallback={this.handleCallbackPlayer} parentData={this.state.budget}></PlayerData>\n      </div>\n    );\n  }\n}\n\nclass TeamInfo extends Component{\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      jerseyColor: \"\",\n    };\n  }\n\n  //TODO: when this is called, pass the jerseyColor to the parent so we can\n  // apply it the circles\n  handleCallback = (childData) => {\n    this.setState({jerseyColor: childData})\n    this.props.parentCallback(childData);\n  }\n\n  render() {\n    return(\n      <div className=\"team-info-container\">\n          <TeamInput></TeamInput>\n          <JerseyColor parentCallback = {this.handleCallback}></JerseyColor>\n      </div>\n    )\n  }\n}\n\nclass TeamData extends Component{\n  constructor() {\n    super();\n\n    this.state = {\n\n    };\n  }\n\n  handleCallback = (childData) => {\n    this.props.parentCallback(childData);\n  }\n\n  render() {\n    return(\n      <div \n        style={{ backgroundColor: 'salmon' }}\n        className=\"team-data-container\">\n          <PlayersSelected></PlayersSelected>\n          <Budget parentCallback = {this.handleCallback}></Budget>\n      </div>\n    )\n  }\n}\n\nclass PlayerData extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      budget: 100,\n    };\n  }\n\n  handleCallback = (playerName, playerPos) => {\n    this.props.parentCallback(playerName, playerPos);\n  }\n\n  componentDidUpdate = (prevProps) => {\n    if(this.props.parentData !== prevProps.parentData){\n      this.setState({budget: this.props.parentData});\n    }\n  }\n\n  render() {\n    return(\n      <div className=\"player-data-container\">\n        {/* <FreezePane parentCallback = {this.handleCallback}></FreezePane> */}\n        <ScrollList parentCallback={this.handleCallback} parentData={this.state.budget}></ScrollList>\n      </div>\n    );\n  }\n}\n\nclass FreezePane extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      \n    }\n  }\n\n  handleCallback = (childData) => {\n    this.props.parentCallback(childData)\n  }\n\n  render() {\n    return(\n      <div className=\"freeze-pane\">\n        <div className=\"freeze-pane-item\">Name</div>\n        <div className=\"freeze-pane-item\">\n          <PosFilter parentCallback = {this.handleCallback} className=\"freeze-pane-item\"></PosFilter>\n        </div>\n        <div className=\"freeze-pane-item\">Price</div>\n      </div>\n    );\n  }\n}\n\nclass ScrollList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      currPlayer: \"\",\n      currPlayerPrice: 0,\n      currPlayerPos: \"\",\n      budget: 100,\n    }\n  }\n\n  handleCallback = (childDataName, childDataPrice, childDataPos) => {\n    this.setState({currPlayer: childDataName,\n    currPlayerPrice: childDataPrice,\n    currPlayerPos: childDataPos}); \n  }\n\n  componentDidUpdate = (prevProps) => {\n    if(this.props.parentData !== prevProps.parentData){\n      this.setState({budget: this.props.parentData});\n    }\n  }\n\n  addPlayer = (playerName, playerPos) => {\n    this.props.parentCallback(playerName, playerPos);\n  }\n\n  render() {\n    let count = 0;\n    return(\n      <div className=\"scroller\">\n        <AlertDialog addPlayerCallback = {this.addPlayer} playerName = {this.state.currPlayer} playerPos = {this.state.currPlayerPos}\n        playerPrice = {this.state.currPlayerPrice} budget={this.state.budget} className=\"dialog\"></AlertDialog>\n        <SortingTable parentCallback = {this.handleCallback} id=\"table\"></SortingTable>\n      </div>\n\n\n\n    );\n  }\n}\n\nclass PosFilter extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      filterByPos: \"\",\n    };\n  }\n\n  handleClick = (e) => {\n    this.setState({filterByPos: e.target.outerText});\n    this.props.parentCallback(e.target.outerText);\n    \n  }\n\n  render() {\n    return(\n        <DropdownButton id=\"dropdown-basic-button\" title=\"Pos\">\n          <Dropdown.Item href=\"#/action-1\" onClick={this.handleClick}>F</Dropdown.Item>\n          <Dropdown.Item href=\"#/action-2\" onClick={this.handleClick}>MID</Dropdown.Item>\n          <Dropdown.Item href=\"#/action-3\">DEF</Dropdown.Item>\n          <Dropdown.Item href=\"#/action-3\">GK</Dropdown.Item>\n        </DropdownButton>\n    );\n  }\n}\n\nclass TeamInput extends Component {\n  constructor(){\n    super();\n\n    this.state = {\n      text: \"\",\n    };\n  }\n\n  handleChange = (e) => {\n    this.setState({text:e.target.value})\n  }\n\n  render() {\n    return(\n      <div>\n        <label for=\"teamInput\">Team name:</label>\n        <input type=\"text\" id=\"teamInput\" onChange= {this.handleChange}></input>\n      </div>\n    );\n  }\n}\n\n// ex value: red = '#ff0000'\nclass JerseyColor extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      jerseyColor: \"\",\n    };\n  }\n\n  //TODO: only handleChange when the user has left...\n  //not when they are dragging the color wheel around\n  // a transition effect for the 'jerseys' (circle) with a delay\n  // should resolve this\n  handleChange = (e) => {\n    this.setState({jerseyColor: e.target.value});\n    this.props.parentCallback(this.state.jerseyColor);\n  }\n\n  render() {\n    return(\n      <div>\n        <label for=\"jerseyColor\">Jersey Color:</label>\n        <input type=\"color\" id=\"jerseyColor\"\n        onChange= {this.handleChange}></input>\n      </div>\n    );\n  }\n}\n\n// CURRENT TASK: figure out how to check whether a circle is filled\nconst Field = (props) => {\n  const [jerseyColor, setJerseyColor] = useState(props.parentData);\n  const [currPlayer, setCurrPlayer] = useState(props.parentPlayerName);\n  const [currPlayerPos, setCurrPlayerPos] = useState(props.parentPlayerPos);\n\n  useEffect(() => {\n    setJerseyColor(props.parentData);\n  }, [props.parentData]);\n\n  useEffect(() => {\n    setCurrPlayer(props.parentPlayerName);\n    setCurrPlayerPos(props.parentPlayerPos);\n    addPlayer(props.parentPlayerName, props.parentPlayerPos);\n  }, [props.parentPlayerName]);\n\n  function addPlayer(name, pos) { //TODO: see if there's a way to make this NOT call upon initial render. See line 301, using callback functions\n    let newPos = \"test\";\n    if(pos == 'GK') newPos = \"goalkeeper\";\n    if(pos == 'D') newPos = 'defender';\n    if(pos == 'M') newPos = 'midfielder';\n    if(pos == 'F') newPos = 'forward';\n\n    //CURRENT TASK: see code here\n    let elements = document.querySelectorAll(`.${newPos}`);\n    elements = Array.from(elements);\n    console.log(elements);\n    elements.every(e => {\n      if(e.classList.value.includes(\"filled\")){\n        //do nothing, the current pos is already occupied\n        console.log(\"element is filled, doing nothing...\")\n      }\n      else {\n        console.log(\"element not filled, doing something...\")\n        e.classList.add(\"filled\");\n        // add to current circle the playerName\n        return false;\n      }\n    });\n\n\n\n  }\n\n  // 1. check if player already, if so, don't do anything\n  // 2. if not current player (else), and if positions are available, then add him to the 1st available circle \n  // 3. must return adjusted budget if player is successfully added\n  // MUST DO: figure out where to place add function. I need to access the filled property to determine if a circle can be occupied or if I must check the next\n  // MUST DO: use position to check whether we should be calling into gk, def, mid, or forward\n\n  return(\n      <div className=\"field\">\n        \n        <div className=\"gk-flex flex-box\">\n          <Circle classNames=\"circle goalkeeper\" \n          parentData = {jerseyColor}\n          filled = {false}\n          ></Circle>\n        </div>\n\n        <div className=\"defense flex-box\">\n          <Circle classNames=\"circle defender\"\n          parentData = {jerseyColor}\n          ></Circle>\n          <Circle classNames=\"circle defender\"\n          parentData = {jerseyColor}\n          ></Circle>\n          <Circle classNames=\"circle defender\"\n          parentData = {jerseyColor}\n          ></Circle>\n        </div>\n\n        <div className=\"midfield flex-box\">\n          <Circle classNames=\"circle midfielder\"\n          parentData = {jerseyColor}\n          ></Circle>\n          <Circle classNames=\"circle midfielder\"\n          parentData = {jerseyColor}\n          ></Circle>\n          <Circle classNames=\"circle midfielder\"\n          parentData = {jerseyColor}\n          ></Circle>\n          <Circle classNames=\"circle midfielder\"\n          parentData = {jerseyColor}\n          ></Circle>\n        </div>\n\n        <div className=\"offense flex-box\">\n          <Circle classNames=\"circle forward\"\n          parentData = {jerseyColor}\n          ></Circle>\n          <Circle classNames=\"circle forward\"\n          parentData = {jerseyColor}\n          ></Circle>\n          <Circle classNames=\"circle forward\"\n          parentData = {jerseyColor}\n          ></Circle>\n        </div>\n\n      </div>\n  );\n}\n\n\nconst Circle = (props) => {\n  const [jerseyColor, setJerseyColor] = useState(props.parentData);\n  const [filled, setFilled] = useState(false);\n  const [playerName, setPlayerName] = useState(\"\");\n\n  useEffect(() => {\n    setJerseyColor(props.parentData);\n  }, props.parentData);\n\n  useEffect(() => {\n    \n  });\n\n  const thisRef = useRef();\n  return(\n    <div>\n      <div\n      ref = {thisRef} \n      className={props.classNames}\n      style={{ backgroundColor: jerseyColor }}\n      onClick={() => console.log(thisRef)}\n      ></div>\n      <span className=\"circleText\">{playerName}</span>\n    </div>\n  );\n}\n\n//TODO: where should the increment() go?\nclass PlayersSelected extends Component {\n  constructor(){\n    super();\n\n    this.state = {\n      playersOnTeam: 0,\n    }\n  }\n\n  render() {\n    return(\n      <div className=\"players-selected\">\n        Players selected: {this.state.playersOnTeam}/11\n        </div>\n    );\n  }\n}\n\nclass Budget extends Component {\n  constructor(){\n    super();\n\n    this.state = {\n      budget: 100,\n    }\n\n  }\n\n  // TODO: componentDidUpdate()\n\n  render() {\n    return(\n      <div className=\"budget\" onChange={() => this.props.parentCallback(this.state.budget)}>\n        Budget: {this.state.budget}m\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}