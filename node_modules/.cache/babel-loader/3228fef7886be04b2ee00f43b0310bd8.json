{"ast":null,"code":"var _jsxFileName = \"/home/blaise/the_odin_project/legends-xi/src/App.js\";\nimport './style.css';\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.handleCallback = childData => {\n      this.setState({\n        jerseyColor: childData\n      });\n      console.log(\"in Container: \");\n      console.log(childData);\n    };\n\n    this.state = {\n      jerseyColor: \"#000000\"\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(TeamInfo, {\n        parentCallback: this.handleCallback\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TeamData, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        parentData: this.state.jerseyColor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PlayerData, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass TeamInfo extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleCallback = childData => {\n      this.setState({\n        jerseyColor: childData\n      });\n      this.props.parentCallback(childData);\n      console.log(\"in TeamInfo: \");\n      console.log(childData);\n    };\n\n    this.state = {\n      jerseyColor: \"\"\n    };\n  } //TODO: when this is called, pass the jerseyColor to the parent so we can\n  // apply it the circles\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"team-info-container\",\n      children: [/*#__PURE__*/_jsxDEV(TeamInput, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(JerseyColor, {\n        parentCallback: this.handleCallback\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass TeamData extends Component {\n  constructor() {\n    super();\n    this.state = {};\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: 'salmon'\n      },\n      className: \"team-data-container\",\n      children: [/*#__PURE__*/_jsxDEV(PlayersSelected, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Budget, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass PlayerData extends Component {\n  constructor() {\n    super();\n    this.state = {};\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player-data-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass TeamInput extends Component {\n  constructor() {\n    super();\n\n    this.handleChange = e => {\n      this.setState({\n        text: e.target.value\n      });\n    };\n\n    this.state = {\n      text: \"\"\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"teamInput\",\n        children: \"Team name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"teamInput\",\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this);\n  }\n\n} // The value of an <input> element of type color is always a DOMString which\n//  contains a 7-character string specifying an RGB color in hexadecimal \n//  format. While you can input the color in either upper- or lower-case, \n//  it will be stored in lower-case form. \n// ex: red = '#ff0000'\n// TODO: pass color to parent\n\n\nclass JerseyColor extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      this.setState({\n        jerseyColor: e.target.value\n      });\n      this.props.parentCallback(this.state.jerseyColor);\n      console.log(\"in JerseyColor: \");\n      console.log(this.state.jerseyColor);\n    };\n\n    this.state = {\n      jerseyColor: \"\"\n    };\n  } //TODO: only handleChange when the user has left...\n  //not when they are dragging the color wheel around\n  // a transition effect for the 'jerseys' (circle) with a delay\n  // should resolve this\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"jerseyColor\",\n        children: \"Jersey Color:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"color\",\n        id: \"jerseyColor\",\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Field extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      jerseyColor: this.props.parentData\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.parentData !== prevProps.parentData) {\n      this.setState({\n        jerseyColor: this.props.parentData\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"field\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nclass Circle extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      jerseyColor: this.props.parentData\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.parentData !== prevProps.parentData) {\n      this.setState({\n        jerseyColor: this.props.parentData\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: this.props.classNames,\n      style: {\n        backgroundColor: this.state.jerseyColor\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this);\n  }\n\n} //TODO: where should the increment() go?\n\n\nclass PlayersSelected extends Component {\n  constructor() {\n    super();\n    this.state = {\n      playersOnTeam: 0\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"players-selected\",\n      children: [\"Players selected: \", this.state.playersOnTeam, \"/11\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Budget extends Component {\n  constructor() {\n    super();\n    this.state = {\n      budget: 100\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"budget\",\n      children: [\"Budget: \", this.state.budget, \"m\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/blaise/the_odin_project/legends-xi/src/App.js"],"names":["React","Component","App","constructor","handleCallback","childData","setState","jerseyColor","console","log","state","render","TeamInfo","props","parentCallback","TeamData","backgroundColor","PlayerData","TeamInput","handleChange","e","text","target","value","JerseyColor","Field","parentData","componentDidUpdate","prevProps","Circle","classNames","PlayersSelected","playersOnTeam","Budget","budget"],"mappings":"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","sourcesContent":["import './style.css';\nimport React, {Component} from 'react';\n\n\nclass App extends Component {\n  constructor(){\n    super();\n\n    this.state = {\n      jerseyColor: \"#000000\",\n    };\n  }\n\n  handleCallback = (childData) => {\n    this.setState({jerseyColor: childData})\n    console.log(\"in Container: \");\n    console.log(childData);\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <TeamInfo parentCallback = {this.handleCallback}></TeamInfo>\n        <TeamData></TeamData>\n        <Field parentData = {this.state.jerseyColor}></Field>\n        <PlayerData></PlayerData>\n\n      </div>\n    );\n  }\n}\n\nclass TeamInfo extends Component{\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      jerseyColor: \"\",\n    };\n  }\n\n  //TODO: when this is called, pass the jerseyColor to the parent so we can\n  // apply it the circles\n  handleCallback = (childData) => {\n    this.setState({jerseyColor: childData})\n    this.props.parentCallback(childData);\n\n    console.log(\"in TeamInfo: \");\n    console.log(childData);\n  }\n\n  render() {\n    return(\n      <div className=\"team-info-container\">\n          <TeamInput></TeamInput>\n          <JerseyColor parentCallback = {this.handleCallback}></JerseyColor>\n      </div>\n    )\n  }\n}\n\nclass TeamData extends Component{\n  constructor() {\n    super();\n\n    this.state = {\n\n    };\n  }\n\n  render() {\n    return(\n      <div \n        style={{ backgroundColor: 'salmon' }}\n        className=\"team-data-container\">\n          <PlayersSelected></PlayersSelected>\n          <Budget></Budget>\n      </div>\n    )\n  }\n}\n\nclass PlayerData extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n\n    };\n  }\n\n  render() {\n    return(\n      <div className=\"player-data-container\">\n\n      </div>\n    );\n  }\n}\n\nclass TeamInput extends Component {\n  constructor(){\n    super();\n\n    this.state = {\n      text: \"\",\n    };\n  }\n\n  handleChange = (e) => {\n    this.setState({text:e.target.value})\n  }\n\n  render() {\n    return(\n      <div>\n        <label for=\"teamInput\">Team name:</label>\n        <input type=\"text\" id=\"teamInput\" onChange= {this.handleChange}></input>\n      </div>\n    );\n  }\n}\n\n// The value of an <input> element of type color is always a DOMString which\n//  contains a 7-character string specifying an RGB color in hexadecimal \n//  format. While you can input the color in either upper- or lower-case, \n//  it will be stored in lower-case form. \n// ex: red = '#ff0000'\n// TODO: pass color to parent\nclass JerseyColor extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      jerseyColor: \"\",\n    };\n  }\n\n  //TODO: only handleChange when the user has left...\n  //not when they are dragging the color wheel around\n  // a transition effect for the 'jerseys' (circle) with a delay\n  // should resolve this\n  handleChange = (e) => {\n    this.setState({jerseyColor: e.target.value});\n    this.props.parentCallback(this.state.jerseyColor);\n    console.log(\"in JerseyColor: \");\n    console.log(this.state.jerseyColor)\n  }\n\n  render() {\n    return(\n      <div>\n        <label for=\"jerseyColor\">Jersey Color:</label>\n        <input type=\"color\" id=\"jerseyColor\"\n        onChange= {this.handleChange}></input>\n      </div>\n    );\n  }\n}\n\nclass Field extends Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      jerseyColor: this.props.parentData,\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if(this.props.parentData !== prevProps.parentData){\n      this.setState({jerseyColor: this.props.parentData})\n    }\n  }\n\n  render() {\n    return(\n        <div className=\"field\">\n          \n\n        </div>\n    );\n  }\n}\n\nclass Circle extends Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      jerseyColor: this.props.parentData,\n    };\n  }\n\n  componentDidUpdate(prevProps){\n    if(this.props.parentData !== prevProps.parentData) {\n      this.setState({jerseyColor: this.props.parentData})\n    }\n  }\n\n  render() {\n    return(\n      <div \n        className={this.props.classNames}\n        style={{ backgroundColor: this.state.jerseyColor }}\n        ></div>\n    );\n  }\n}\n\n//TODO: where should the increment() go?\nclass PlayersSelected extends Component {\n  constructor(){\n    super();\n\n    this.state = {\n      playersOnTeam: 0,\n    }\n  }\n\n  render() {\n    return(\n      <div className=\"players-selected\">\n        Players selected: {this.state.playersOnTeam}/11\n        </div>\n    );\n  }\n}\n\nclass Budget extends Component {\n  constructor(){\n    super();\n\n    this.state = {\n      budget: 100,\n    }\n\n  }\n\n  render() {\n    return(\n      <div className=\"budget\">\n        Budget: {this.state.budget}m\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}