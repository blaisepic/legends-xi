{"ast":null,"code":"var _jsxFileName = \"/home/blaise/the_odin_project/legends-xi/src/components/FilteringTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useMemo } from 'react';\nimport { useTable, useGlobalFilter, useFilters } from 'react-table';\nimport MOCK_DATA from \"./MOCK.DATA.json\";\nimport { COLUMNS } from './COLUMNS.js';\nimport './table.css';\nimport GlobalFilter from './GlobalFilter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst FilteringTable = () => {\n  _s();\n\n  const columns = useMemo(() => COLUMNS, []);\n  const data = useMemo(() => MOCK_DATA, []);\n  let tableInstance = useTable({\n    columns,\n    data\n  }, useFilters, useGlobalFilter);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    state,\n    setGlobalFilter\n  } = tableInstance;\n  const {\n    globalFilter\n  } = state;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GlobalFilter, {\n      filter: globalFilter,\n      setFilter: setGlobalFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"table\", { ...getTableProps(),\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps,\n            children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", { ...column.getHeaderProps(),\n              children: column.render('Header')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n          children: rows.map(row => {\n            prepareRow(row);\n            return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n              children: row.cells.map(cell => {\n                return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n                  children: cell.render('Cell')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 52\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(FilteringTable, \"pjBIPaRCpDJjOFbWNcaYNCnHqio=\", false, function () {\n  return [useTable];\n});\n\n_c = FilteringTable;\nexport default FilteringTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"FilteringTable\");","map":{"version":3,"sources":["/home/blaise/the_odin_project/legends-xi/src/components/FilteringTable.js"],"names":["React","Component","useMemo","useTable","useGlobalFilter","useFilters","MOCK_DATA","COLUMNS","GlobalFilter","FilteringTable","columns","data","tableInstance","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","state","setGlobalFilter","globalFilter","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,OAA1B,QAAwC,OAAxC;AACA,SAAQC,QAAR,EAAkBC,eAAlB,EAAmCC,UAAnC,QAAoD,aAApD;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,SAAQC,OAAR,QAAsB,cAAtB;AACA,OAAO,aAAP;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AACzB,QAAMC,OAAO,GAAGR,OAAO,CAAC,MAAMK,OAAP,EAAgB,EAAhB,CAAvB;AACA,QAAMI,IAAI,GAAGT,OAAO,CAAC,MAAMI,SAAP,EAAkB,EAAlB,CAApB;AAEA,MAAIM,aAAa,GAAGT,QAAQ,CAAC;AACzBO,IAAAA,OADyB;AAEzBC,IAAAA;AAFyB,GAAD,EAI5BN,UAJ4B,EAK5BD,eAL4B,CAA5B;AAOA,QAAM;AAACS,IAAAA,aAAD;AAAgBC,IAAAA,iBAAhB;AAAmCC,IAAAA,YAAnC;AAAiDC,IAAAA,IAAjD;AAAuDC,IAAAA,UAAvD;AAAmEC,IAAAA,KAAnE;AAA0EC,IAAAA;AAA1E,MAA6FP,aAAnG;AACA,QAAM;AAACQ,IAAAA;AAAD,MAAiBF,KAAvB;AACA,sBACI;AAAA,4BACA,QAAC,YAAD;AAAc,MAAA,MAAM,EAAEE,YAAtB;AAAoC,MAAA,SAAS,EAAED;AAA/C;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAA,6BACI,sBAAWN,aAAa,EAAxB;AAAA,gCACI;AAAA,oBAEQE,YAAY,CAACM,GAAb,CAAkBC,WAAD,iBACb,mBAAQA,WAAW,CAACC,mBAApB;AAAA,sBAEQD,WAAW,CAACE,OAAZ,CAAoBH,GAApB,CAAyBI,MAAD,iBACpB,mBAAQA,MAAM,CAACC,cAAP,EAAR;AAAA,wBAAkCD,MAAM,CAACE,MAAP,CAAc,QAAd;AAAlC;AAAA;AAAA;AAAA;AAAA,oBADJ;AAFR;AAAA;AAAA;AAAA;AAAA,kBADJ;AAFR;AAAA;AAAA;AAAA;AAAA,gBADJ,eAgBI,sBAAWb,iBAAiB,EAA5B;AAAA,oBAEQE,IAAI,CAACK,GAAL,CAAUO,GAAD,IAAS;AACdX,YAAAA,UAAU,CAACW,GAAD,CAAV;AACA,gCACI,mBAAQA,GAAG,CAACC,WAAJ,EAAR;AAAA,wBAEQD,GAAG,CAACE,KAAJ,CAAUT,GAAV,CAAeU,IAAD,IAAU;AACpB,oCAAO,mBAAQA,IAAI,CAACC,YAAL,EAAR;AAAA,4BAA8BD,IAAI,CAACJ,MAAL,CAAY,MAAZ;AAA9B;AAAA;AAAA;AAAA;AAAA,wBAAP;AACH,eAFD;AAFR;AAAA;AAAA;AAAA;AAAA,oBADJ;AASH,WAXD;AAFR;AAAA;AAAA;AAAA;AAAA,gBAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA,kBADJ;AAwCH,CArDD;;GAAMlB,c;UAIkBN,Q;;;KAJlBM,c;AAuDN,eAAeA,cAAf","sourcesContent":["import React, {Component, useMemo} from 'react';\nimport {useTable, useGlobalFilter, useFilters} from 'react-table';\nimport MOCK_DATA from \"./MOCK.DATA.json\";\nimport {COLUMNS} from './COLUMNS.js';\nimport './table.css';\nimport GlobalFilter from './GlobalFilter';\n\nconst FilteringTable = () => {\n    const columns = useMemo(() => COLUMNS, []);\n    const data = useMemo(() => MOCK_DATA, []);\n\n    let tableInstance = useTable({\n        columns,\n        data\n    }, \n    useFilters,\n    useGlobalFilter);\n\n    const {getTableProps, getTableBodyProps, headerGroups, rows, prepareRow, state, setGlobalFilter} = tableInstance;\n    const {globalFilter} = state;\n    return(\n        <>\n        <GlobalFilter filter={globalFilter} setFilter={setGlobalFilter}/>\n        <div>\n            <table {...getTableProps()}>\n                <thead>\n                    {\n                        headerGroups.map((headerGroup) => (\n                            <tr {...headerGroup.getHeaderGroupProps}>\n                                {\n                                    headerGroup.headers.map((column) => (\n                                        <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n                                    ))\n                                }\n                                \n                            </tr>\n                        ))\n                    }\n                </thead>\n\n                <tbody {...getTableBodyProps()}>\n                    {\n                        rows.map((row) => {\n                            prepareRow(row);\n                            return (\n                                <tr {...row.getRowProps()}>\n                                    {\n                                        row.cells.map((cell) => {\n                                            return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                                        })\n                                    }\n                                </tr>\n                            )\n                        })\n                    }\n                </tbody>\n            </table>\n        </div>\n        </>\n    );\n}\n\nexport default FilteringTable;"]},"metadata":{},"sourceType":"module"}