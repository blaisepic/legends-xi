{"ast":null,"code":"var _jsxFileName = \"/home/blaise/the_odin_project/legends-xi/src/components/SortingTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useMemo } from 'react';\nimport { useTable, useGlobalFilter, useFilters, useSortBy } from 'react-table';\nimport MOCK_DATA from \"./MOCK.DATA.json\";\nimport { COLUMNS } from './COLUMNS.js';\nimport './table.css';\nimport GlobalFilter from './GlobalFilter';\nimport ColumnFilter from './ColumnFilter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SortingTable = () => {\n  _s();\n\n  const columns = useMemo(() => COLUMNS, []);\n  const data = useMemo(() => MOCK_DATA, []);\n  let tableInstance = useTable({\n    columns,\n    data\n  }, useFilters, useGlobalFilter, useSortBy);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    state,\n    setGlobalFilter\n  } = tableInstance;\n  const {\n    globalFilter\n  } = state;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GlobalFilter, {\n      filter: globalFilter,\n      setFilter: setGlobalFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"table\", { ...getTableProps(),\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps,\n            children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n              width: column.width,\n              ...column.getHeaderProps(column.getSortByToggleProps()),\n              children: [column.render('Header'), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: column.isSorted ? column.isSortedDesc ? ' ðŸ”½' : ' ðŸ”¼' : ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: column.canFilter ? column.render('Filter') : null\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n          children: rows.map(row => {\n            prepareRow(row);\n            return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n              id: row.original.key,\n              onClick: parentCallback(row.original.key),\n              children: row.cells.map(cell => {\n                return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n                  children: cell.render('Cell')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 52\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SortingTable, \"pjBIPaRCpDJjOFbWNcaYNCnHqio=\", false, function () {\n  return [useTable];\n});\n\n_c = SortingTable;\nexport default SortingTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"SortingTable\");","map":{"version":3,"sources":["/home/blaise/the_odin_project/legends-xi/src/components/SortingTable.js"],"names":["React","Component","useMemo","useTable","useGlobalFilter","useFilters","useSortBy","MOCK_DATA","COLUMNS","GlobalFilter","ColumnFilter","SortingTable","columns","data","tableInstance","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","state","setGlobalFilter","globalFilter","map","headerGroup","getHeaderGroupProps","headers","column","width","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","canFilter","row","getRowProps","original","key","parentCallback","cells","cell","getCellProps"],"mappings":"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","sourcesContent":["import React, {Component, useMemo} from 'react';\nimport {useTable, useGlobalFilter, useFilters, useSortBy} from 'react-table';\nimport MOCK_DATA from \"./MOCK.DATA.json\";\nimport {COLUMNS} from './COLUMNS.js';\nimport './table.css';\nimport GlobalFilter from './GlobalFilter';\nimport ColumnFilter from './ColumnFilter';\n\nconst SortingTable = () => {\n    const columns = useMemo(() => COLUMNS, []);\n    const data = useMemo(() => MOCK_DATA, []);\n\n    let tableInstance = useTable({\n        columns,\n        data\n    }, \n    useFilters,\n    useGlobalFilter,\n    useSortBy);\n\n    const {getTableProps, getTableBodyProps, headerGroups, rows, prepareRow, state, setGlobalFilter} = tableInstance;\n    const {globalFilter} = state;\n    return(\n        <>\n        <GlobalFilter filter={globalFilter} setFilter={setGlobalFilter}/>\n        <div>\n            <table {...getTableProps()}>\n                <thead>\n                    {\n                        headerGroups.map((headerGroup) => (\n                            <tr {...headerGroup.getHeaderGroupProps}>\n                                {\n                                    headerGroup.headers.map((column) => (\n                                        <th width={column.width}\n                                        {...column.getHeaderProps(column.getSortByToggleProps())}>\n                                            {column.render('Header')}\n                                            <span>\n                                                {column.isSorted ? (column.isSortedDesc ? ' ðŸ”½' : ' ðŸ”¼') : ''}\n                                            </span>\n                                        <div>{column.canFilter ? column.render('Filter') : null}</div>\n                                        </th>\n                                    ))\n                                }\n                                \n                            </tr>\n                        ))\n                    }\n                </thead>\n\n                <tbody {...getTableBodyProps()}>\n                    {\n                        rows.map((row) => {\n                            prepareRow(row);\n                            return (\n                                <tr {...row.getRowProps()} id={row.original.key} onClick={parentCallback(row.original.key)}>\n                                    {\n                                        row.cells.map((cell) => {\n                                            return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                                        })\n                                    }\n                                </tr>\n                            )\n                        })\n                    }\n                </tbody>\n            </table>\n        </div>\n        </>\n    );\n}\n\nexport default SortingTable;"]},"metadata":{},"sourceType":"module"}