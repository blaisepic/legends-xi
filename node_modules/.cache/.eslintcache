[{"/home/blaise/the_odin_project/legends-xi/src/index.js":"1","/home/blaise/the_odin_project/legends-xi/src/App.js":"2","/home/blaise/the_odin_project/legends-xi/src/Data.js":"3","/home/blaise/the_odin_project/legends-xi/src/components/BasicTable.js":"4","/home/blaise/the_odin_project/legends-xi/src/components/COLUMNS.js":"5","/home/blaise/the_odin_project/legends-xi/src/components/FilteringTable.js":"6","/home/blaise/the_odin_project/legends-xi/src/components/GlobalFilter.js":"7","/home/blaise/the_odin_project/legends-xi/src/components/ColumnFilter.js":"8","/home/blaise/the_odin_project/legends-xi/src/components/SortingTable.js":"9","/home/blaise/the_odin_project/legends-xi/src/components/Dialog.js":"10","/home/blaise/the_odin_project/legends-xi/src/components/SimulateDialog.js":"11"},{"size":198,"mtime":1627784832762,"results":"12","hashOfConfig":"13"},{"size":32542,"mtime":1630000546690,"results":"14","hashOfConfig":"13"},{"size":4222,"mtime":1628190109188,"results":"15","hashOfConfig":"13"},{"size":1913,"mtime":1628291423684,"results":"16","hashOfConfig":"13"},{"size":626,"mtime":1629825701875,"results":"17","hashOfConfig":"13"},{"size":2374,"mtime":1628348175752,"results":"18","hashOfConfig":"13"},{"size":288,"mtime":1628349006629,"results":"19","hashOfConfig":"13"},{"size":348,"mtime":1628348836297,"results":"20","hashOfConfig":"13"},{"size":3049,"mtime":1629752954558,"results":"21","hashOfConfig":"13"},{"size":1835,"mtime":1629826569024,"results":"22","hashOfConfig":"13"},{"size":1818,"mtime":1630000575076,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"hfhcwn",{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":38,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"26"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/blaise/the_odin_project/legends-xi/src/index.js",[],["52","53"],"/home/blaise/the_odin_project/legends-xi/src/App.js",["54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91"],"/home/blaise/the_odin_project/legends-xi/src/Data.js",["92"],"// import pg from 'pg';\n\n// let connectionString = \"postgres://blaise:[password]@my_local_server/ip:5432/fifa\";\n// let pgClient = new pg.Client(connectionString);\n// pgClient.connect();\n// let query = pgClient.query(\"SELECT * FROM legends\");\n\n// query.on(\"row\", function(row, result){\n//     result.addRow(row);\n// });\n\n// console.log(result);\n\n// export default Data;\n\nclass Player{\n    constructor(key, name, pos, ovr){\n        this.key = key;\n        this.name = name;\n        this.pos = pos;\n        this.ovr = ovr;\n    }\n}\n\nlet players = {\npele: [\"Pelé\", \"F\", 98],\nmaradona: [\"Diego Maradona\", \"F\", 97],\nzidane: [\"Zinedine Zidane\", \"MID\", 96],\nmaldini : [\"Paolo Maldini\", \"DEF\", 94],\nronaldinho: [\"Ronaldinho\", \"F\", 94],\nmatthaus: [\"Lothar Matthäus\", \"MID\", 93],\ngullit: [\"Ruud Gullit\", \"F\", 93],\nbaresi: [\"Franco Baresi\", \"DEF\", 93],\ndalglish: [\"Kenny Dalglish\", \"F\", 92],\nschmiechel: [\"Peter Schmeichel\", \"GK\", 92],\npiero: [\"Alessandro Del Piero\", \"F\", 92],\nfigo: [\"Luís Figo\",\t \"MID\", \t92],\ncannavaro: [\"Fabio Cannavaro\", \t\"DEF\", \t92],\ngiggs: [\"Ryan Giggs\", \t\"MID\", \t92],\nrush: [\"Ian Rush\", \t\"F\", 91],\ncarlos: [\"Roberto Carlos\", \t\"DEF\", \t91],\nkluivert: [\"Patrick Kluivert\", \t\"F\", 91],\nsar: [\"Edwin van der Sar\", \t\"GK\", \t91],\nshevchenko: [\"Andriy Shevchenko\", \"F\", 91,],\nowen: [\"Michael Owen\", \"F\", 91],\npires: [\"Robert Pirès\", \"MID\", 91],\nseedorf: [\"Clarence Seedorf\", \"MID\", 91],\ndesailly: [\"Marcel Desailly\", \"DEF\", 91],\nshearer: [\"Alan Shearer\", \"F\", 91],\ncantona: [\"Eric Cantona\", \t\"F\", \t90],\nveron: [\"Juan Sebastián Verón\", \t\"MID\", \t90],\nlarsson: [\"Henrik Larsson\", \"F\", 90],\ncrespo: [\"Hernán Crespo\", \t\"F\", \t90],\nmakelele: [\"Claude Makélélé\", \"MID\", \t90],\nzola: [\"Gianfranco Zola\", \"F\", 90],\nkeane: [\"Roy Keane\", \"MID\", 90],\ncambell: [\"Sol Campbell\", \"DEF\", 89],\nhenry: [\"Thierry Henry\", \"F\", 94],\nbuffon: [\"Gianluigi Buffon\", \"GK\", 94],\nnistelrooy: [\"Ruud van Nistelrooy\", \"F\", 92],\nmakaay: [\"Roy Makaay\", \"F\", 91],\ncasillas: [\"Casillas\", \"GK\", 91],\nvieira: [\"Patrick Vieira\", \"MID\", 91],\ntotti: [\"Francesco Totti\", \"F\", 91],\nnesta: [\"Alessandro Nesta\", \"DEF\", 91],\nkahn: [\"Oliver Kahn\", \"GK\", 91],\nmarcos: [\"Marcos\", \"GK\", 90],\nlucio: [\"Lucio\", \"DEF\", \t90],\ngerrard: [\"Steven Gerrard\", \"MID\", 90],\nstam: [\"Jaap Stam\", \"DEF\", 90],\nkaka: [\"Kaká\", \"F\", 89],\nadriano: [\"Adriano\", \"F\", 89],\nronaldo: [\"Ronaldo\", \"F\", 89],\naimar: [\"Pablo César Aimar\", \"F\", 89],\nferdinand: [\"Rio Ferdinand\", \"DEF\", 89],\ntrezeguet: [\"David Trezeguet\", \"F\", 89],\ntoldo: [\"Francesco Toldo\", \"GK\", 89],\nthuram: [\"Lilian Thuram\", \"DEF\", 89],\nscholes: [\"Paul Scholes\", \"MID\", 89],\nvicente: [\"Vicente\", \"MID\", 88],\nvaleron: [\"Valerón\", \"MID\", 88],\nrosicky: [\"Tomás Rosicky\", \"MID\", 88],\nnedved: [\"Pavel Nedved\", \"MID\", 88],\nzambrotta: [\"Gianluca Zambrotta\", \"DEF\", 88],\ngiven: [\"Shay Given\", \"GK\", 88],\ncudicini: [\"Carlo Cudicini\", \"GK\", 88],\nvieri: [\"Christian Vieri\", \"F\", 88],\nraul: [\"Raúl\", \"F\", 87],\ncisse: [\"Djibril Cissé\", \"F\", 87],\nkaragounis: [\"Giorgos Karagounis\", \"MID\", 87],\nnikopolidis: [\"Antonis Nikopolidis\", \"GK\", 87],\nmorientes: [\"Morientes\",  \"F\", 87],\nlampard: [\"Frank Lampard\", \"MID\", 87],\ncafu: [\"Cafú\", \"DEF\", 87],\nbergkamp: [\"Dennis Bergkamp\",  \"F\",  87],\ndida: [\"Dida\",  \"GK\",  87],\nballack: [\"Michael Ballack\", \"MID\", 87],\nbarthez: [\"Fabien Barthez\", \"GK\", 87],\ninzaghi: [\"Filippo Inzaghi\",  \"F\",  87],\nzanetti: [\"J. Zanetti\", \"DEF\", 87],\nbeckham: [\"David Beckham\", \"MID\", 87],\ndeco: [\"Deco\", \"MID\", 86],\ngilberto: [\"Gilberto\", \"MID\", 86],\njoaquin: [\"Joaquín\",  \"MID\",\t 86],\nroberto: [\"Zé Roberto\",  \"MID\", \t86],\nsamuel: [\"Walter Adrián Samuel\",  \"DEF\",  86],\nbuyten: [ \"Daniel Van Buyten\",  \"DEF\",  86],\nhoward: [ \"Tim Howard\",  \"GK\", \t86],\nterry: [ \"John Terry\",\t \"DEF\", \t86],\npirlo: [ \"Andrea Pirlo\", \t\"MID\", \t86]\n};\n\nlet listVals = [];\nlet listKeys = [];\n\nfor(const [key, val] of Object.entries(players)) {\n    listKeys.push(key);\n    listVals.push(val);\n}\n\n// listKeys.push(\"pele\");\n// listVals.push([\"Pelé\", \"F\", 98]);\n\n// listKeys.push(\"maradona\");\n// listVals.push([\"Maradona\", \"F\", 97]);\n\n// Array.from(players).forEeach(p => {\n//     console.log(p);\n// });\n\n// players.forEach((p) => {\n//     console.log(p);\n//     listItems.push(p);\n// });\n\nexport {listVals};\nexport {listKeys};","/home/blaise/the_odin_project/legends-xi/src/components/BasicTable.js",["93"],"import React, {Component, useMemo} from 'react';\nimport {useTable} from 'react-table';\nimport MOCK_DATA from \"./MOCK.DATA.json\";\nimport {COLUMNS} from './COLUMNS.js';\nimport './table.css'\n\nconst BasicTable = () => {\n    const columns = useMemo(() => COLUMNS, []);\n    const data = useMemo(() => MOCK_DATA, []);\n\n    let tableInstance = useTable({\n        columns,\n        data\n    });\n\n    const {getTableProps, getTableBodyProps, headerGroups, rows, prepareRow} = tableInstance;\n    return(\n        <div>\n            <table {...getTableProps()}>\n                <thead>\n                    {\n                        headerGroups.map((headerGroup) => (\n                            <tr {...headerGroup.getHeaderGroupProps}>\n                                {\n                                    headerGroup.headers.map((column) => (\n                                        <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n                                    ))\n                                }\n                                \n                            </tr>\n                        ))\n                    }\n                </thead>\n\n                <tbody {...getTableBodyProps()}>\n                    {\n                        rows.map((row) => {\n                            prepareRow(row);\n                            return (\n                                <tr {...row.getRowProps()}>\n                                    {\n                                        row.cells.map((cell) => {\n                                            return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                                        })\n                                    }\n                                </tr>\n                            )\n                        })\n                    }\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\nexport default BasicTable;","/home/blaise/the_odin_project/legends-xi/src/components/COLUMNS.js",[],"/home/blaise/the_odin_project/legends-xi/src/components/FilteringTable.js",["94","95"],"import React, {Component, useMemo} from 'react';\nimport {useTable, useGlobalFilter, useFilters} from 'react-table';\nimport MOCK_DATA from \"./MOCK.DATA.json\";\nimport {COLUMNS} from './COLUMNS.js';\nimport './table.css';\nimport GlobalFilter from './GlobalFilter';\nimport ColumnFilter from './ColumnFilter';\n\nconst FilteringTable = () => {\n    const columns = useMemo(() => COLUMNS, []);\n    const data = useMemo(() => MOCK_DATA, []);\n\n    let tableInstance = useTable({\n        columns,\n        data\n    }, \n    useFilters,\n    useGlobalFilter);\n\n    const {getTableProps, getTableBodyProps, headerGroups, rows, prepareRow, state, setGlobalFilter} = tableInstance;\n    const {globalFilter} = state;\n    return(\n        <>\n        <GlobalFilter filter={globalFilter} setFilter={setGlobalFilter}/>\n        <div>\n            <table {...getTableProps()}>\n                <thead>\n                    {\n                        headerGroups.map((headerGroup) => (\n                            <tr {...headerGroup.getHeaderGroupProps}>\n                                {\n                                    headerGroup.headers.map((column) => (\n                                        <th {...column.getHeaderProps()}>{column.render('Header')}\n                                        <div>{column.canFilter ? column.render('Filter') : null}</div>\n                                        </th>\n                                    ))\n                                }\n                                \n                            </tr>\n                        ))\n                    }\n                </thead>\n\n                <tbody {...getTableBodyProps()}>\n                    {\n                        rows.map((row) => {\n                            prepareRow(row);\n                            return (\n                                <tr {...row.getRowProps()}>\n                                    {\n                                        row.cells.map((cell) => {\n                                            return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                                        })\n                                    }\n                                </tr>\n                            )\n                        })\n                    }\n                </tbody>\n            </table>\n        </div>\n        </>\n    );\n}\n\nexport default FilteringTable;","/home/blaise/the_odin_project/legends-xi/src/components/GlobalFilter.js",[],"/home/blaise/the_odin_project/legends-xi/src/components/ColumnFilter.js",[],"/home/blaise/the_odin_project/legends-xi/src/components/SortingTable.js",["96","97","98","99","100"],"import React, {Component, useMemo} from 'react';\nimport {useTable, useGlobalFilter, useFilters, useSortBy} from 'react-table';\nimport MOCK_DATA from \"./MOCK.DATA.json\";\nimport {COLUMNS} from './COLUMNS.js';\nimport './table.css';\nimport GlobalFilter from './GlobalFilter';\nimport ColumnFilter from './ColumnFilter';\n\nfunction SortingTable(props){\n    // constructor(props){\n    //     super(props);\n    // }\n\n    const columns = useMemo(() => COLUMNS, []);\n    const data = useMemo(() => MOCK_DATA, []);\n\n    let tableInstance = useTable({\n        columns,\n        data\n    }, \n    useFilters,\n    useGlobalFilter,\n    useSortBy);\n\n    const {getTableProps, getTableBodyProps, headerGroups, rows, prepareRow, state, setGlobalFilter} = tableInstance;\n    const {globalFilter} = state;\n    return(\n        <>\n        {/* <GlobalFilter filter={globalFilter} setFilter={setGlobalFilter}/> */}\n        <div>\n            <table {...getTableProps()}>\n                <thead>\n                    {\n                        headerGroups.map((headerGroup) => (\n                            <tr {...headerGroup.getHeaderGroupProps}>\n                                {\n                                    headerGroup.headers.map((column) => (\n                                        <th width={column.width} headerHeight={column.headerHeight}\n                                        {...column.getHeaderProps(column.getSortByToggleProps())}>\n                                            {column.render('Header')}\n                                            <span>\n                                                {column.isSorted ? (column.isSortedDesc ? ' 🔽' : ' 🔼') : ''}\n                                            </span>\n                                        <div>{column.canFilter ? column.render('Filter') : null}</div>\n                                        </th>\n                                    ))\n                                }\n                                \n                            </tr>\n                        ))\n                    }\n                </thead>\n\n                <tbody {...getTableBodyProps()}>\n                    {\n                        rows.map((row) => {\n                            prepareRow(row);\n                            return (\n                                <tr {...row.getRowProps()} id={row.original.key} onClick={() => {\n                                    props.parentCallback(row.original.full_name, row.original.price, row.original.pos);\n                                }}>\n                                    {\n                                        row.cells.map((cell) => {\n                                            return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                                        })\n                                    }\n                                </tr>\n                            )\n                        })\n                    }\n                </tbody>\n            </table>\n        </div>\n        </>\n    );\n}\n\nexport default SortingTable;","/home/blaise/the_odin_project/legends-xi/src/components/Dialog.js",["101","102"],"import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nclass AlertDialog extends React.Component {\n  state = {\n    open: false\n  };\n\n  handleClickOpen = () => {\n    if(this.props.playerName !== '') this.setState({ open: true });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n    // this.props.parentCallback('');\n  };\n\n  handleAgree = () => {\n    if(this.props.playerPrice <= this.props.budget){\n      this.props.addPlayerCallback(this.props.playerName, this.props.playerPos, this.props.playerPrice);\n    }\n    \n    this.handleClose();\n  };\n  handleDisagree = () => {\n    this.handleClose();\n  };\n  render() {\n    return (\n      <div className=\"add-player-btn\">\n        {/* Button to trigger the opening of the dialog */}\n        <Button onClick={this.handleClickOpen}>Add Player</Button>\n        {/* Dialog that is displayed if the state open is true */}\n        <Dialog\n          open={this.state.open}\n          onClose={this.handleClose}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">\n            {`Add Player?`}\n          </DialogTitle>\n\n          <DialogActions>\n            <Button onClick={this.handleDisagree} color=\"primary\">\n              No\n            </Button>\n            <Button onClick={this.handleAgree} color=\"primary\" autoFocus>\n              Yes\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nexport default AlertDialog;","/home/blaise/the_odin_project/legends-xi/src/components/SimulateDialog.js",["103","104"],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":5,"column":9,"nodeType":"111","messageId":"112","endLine":5,"endColumn":17},{"ruleId":"109","severity":1,"message":"113","line":6,"column":9,"nodeType":"111","messageId":"112","endLine":6,"endColumn":17},{"ruleId":"109","severity":1,"message":"114","line":10,"column":8,"nodeType":"111","messageId":"112","endLine":10,"endColumn":18},{"ruleId":"109","severity":1,"message":"115","line":11,"column":8,"nodeType":"111","messageId":"112","endLine":11,"endColumn":22},{"ruleId":"109","severity":1,"message":"116","line":13,"column":8,"nodeType":"111","messageId":"112","endLine":13,"endColumn":17},{"ruleId":"109","severity":1,"message":"117","line":16,"column":10,"nodeType":"111","messageId":"112","endLine":16,"endColumn":19},{"ruleId":"109","severity":1,"message":"118","line":57,"column":11,"nodeType":"111","messageId":"112","endLine":57,"endColumn":26},{"ruleId":"109","severity":1,"message":"119","line":104,"column":7,"nodeType":"111","messageId":"112","endLine":104,"endColumn":15},{"ruleId":"109","severity":1,"message":"120","line":158,"column":7,"nodeType":"111","messageId":"112","endLine":158,"endColumn":17},{"ruleId":"109","severity":1,"message":"121","line":213,"column":9,"nodeType":"111","messageId":"112","endLine":213,"endColumn":14},{"ruleId":"109","severity":1,"message":"122","line":277,"column":7,"nodeType":"111","messageId":"112","endLine":277,"endColumn":18},{"ruleId":"109","severity":1,"message":"123","line":308,"column":10,"nodeType":"111","messageId":"112","endLine":308,"endColumn":20},{"ruleId":"109","severity":1,"message":"124","line":309,"column":10,"nodeType":"111","messageId":"112","endLine":309,"endColumn":23},{"ruleId":"109","severity":1,"message":"125","line":314,"column":10,"nodeType":"111","messageId":"112","endLine":314,"endColumn":25},{"ruleId":"109","severity":1,"message":"126","line":314,"column":27,"nodeType":"111","messageId":"112","endLine":314,"endColumn":45},{"ruleId":"109","severity":1,"message":"127","line":315,"column":10,"nodeType":"111","messageId":"112","endLine":315,"endColumn":23},{"ruleId":"128","severity":1,"message":"129","line":325,"column":6,"nodeType":"130","endLine":325,"endColumn":30,"suggestions":"131"},{"ruleId":"132","severity":1,"message":"133","line":333,"column":12,"nodeType":"134","messageId":"135","endLine":333,"endColumn":14},{"ruleId":"132","severity":1,"message":"133","line":334,"column":12,"nodeType":"134","messageId":"135","endLine":334,"endColumn":14},{"ruleId":"132","severity":1,"message":"133","line":335,"column":12,"nodeType":"134","messageId":"135","endLine":335,"endColumn":14},{"ruleId":"132","severity":1,"message":"133","line":336,"column":12,"nodeType":"134","messageId":"135","endLine":336,"endColumn":14},{"ruleId":"132","severity":1,"message":"133","line":359,"column":25,"nodeType":"134","messageId":"135","endLine":359,"endColumn":27},{"ruleId":"132","severity":1,"message":"133","line":359,"column":55,"nodeType":"134","messageId":"135","endLine":359,"endColumn":57},{"ruleId":"132","severity":1,"message":"133","line":359,"column":85,"nodeType":"134","messageId":"135","endLine":359,"endColumn":87},{"ruleId":"132","severity":1,"message":"133","line":407,"column":25,"nodeType":"134","messageId":"135","endLine":407,"endColumn":27},{"ruleId":"132","severity":1,"message":"133","line":407,"column":55,"nodeType":"134","messageId":"135","endLine":407,"endColumn":57},{"ruleId":"132","severity":1,"message":"133","line":407,"column":85,"nodeType":"134","messageId":"135","endLine":407,"endColumn":87},{"ruleId":"132","severity":1,"message":"133","line":407,"column":115,"nodeType":"134","messageId":"135","endLine":407,"endColumn":117},{"ruleId":"132","severity":1,"message":"133","line":467,"column":25,"nodeType":"134","messageId":"135","endLine":467,"endColumn":27},{"ruleId":"132","severity":1,"message":"133","line":467,"column":56,"nodeType":"134","messageId":"135","endLine":467,"endColumn":58},{"ruleId":"132","severity":1,"message":"133","line":467,"column":87,"nodeType":"134","messageId":"135","endLine":467,"endColumn":89},{"ruleId":"109","severity":1,"message":"136","line":603,"column":7,"nodeType":"111","messageId":"112","endLine":603,"endColumn":14},{"ruleId":"109","severity":1,"message":"137","line":607,"column":29,"nodeType":"111","messageId":"112","endLine":607,"endColumn":37},{"ruleId":"109","severity":1,"message":"138","line":654,"column":7,"nodeType":"111","messageId":"112","endLine":654,"endColumn":13},{"ruleId":"109","severity":1,"message":"139","line":748,"column":10,"nodeType":"111","messageId":"112","endLine":748,"endColumn":16},{"ruleId":"109","severity":1,"message":"140","line":748,"column":18,"nodeType":"111","messageId":"112","endLine":748,"endColumn":27},{"ruleId":"141","severity":1,"message":"142","line":775,"column":3,"nodeType":"143","messageId":"144","endLine":777,"endColumn":4},{"ruleId":"141","severity":1,"message":"142","line":789,"column":3,"nodeType":"143","messageId":"144","endLine":792,"endColumn":4},{"ruleId":"109","severity":1,"message":"145","line":16,"column":7,"nodeType":"111","messageId":"112","endLine":16,"endColumn":13},{"ruleId":"109","severity":1,"message":"146","line":1,"column":16,"nodeType":"111","messageId":"112","endLine":1,"endColumn":25},{"ruleId":"109","severity":1,"message":"146","line":1,"column":16,"nodeType":"111","messageId":"112","endLine":1,"endColumn":25},{"ruleId":"109","severity":1,"message":"147","line":7,"column":8,"nodeType":"111","messageId":"112","endLine":7,"endColumn":20},{"ruleId":"109","severity":1,"message":"146","line":1,"column":16,"nodeType":"111","messageId":"112","endLine":1,"endColumn":25},{"ruleId":"109","severity":1,"message":"148","line":6,"column":8,"nodeType":"111","messageId":"112","endLine":6,"endColumn":20},{"ruleId":"109","severity":1,"message":"147","line":7,"column":8,"nodeType":"111","messageId":"112","endLine":7,"endColumn":20},{"ruleId":"109","severity":1,"message":"149","line":25,"column":85,"nodeType":"111","messageId":"112","endLine":25,"endColumn":100},{"ruleId":"109","severity":1,"message":"150","line":26,"column":12,"nodeType":"111","messageId":"112","endLine":26,"endColumn":24},{"ruleId":"109","severity":1,"message":"151","line":5,"column":8,"nodeType":"111","messageId":"112","endLine":5,"endColumn":21},{"ruleId":"109","severity":1,"message":"152","line":6,"column":8,"nodeType":"111","messageId":"112","endLine":6,"endColumn":25},{"ruleId":"109","severity":1,"message":"151","line":5,"column":8,"nodeType":"111","messageId":"112","endLine":5,"endColumn":21},{"ruleId":"109","severity":1,"message":"152","line":6,"column":8,"nodeType":"111","messageId":"112","endLine":6,"endColumn":25},"no-native-reassign",["153"],"no-negated-in-lhs",["154"],"no-unused-vars","'listVals' is defined but never used.","Identifier","unusedVar","'listKeys' is defined but never used.","'BasicTable' is defined but never used.","'FilteringTable' is defined but never used.","'MOCK_DATA' is defined but never used.","'FormLabel' is defined but never used.","'tentativeBudget' is assigned a value but never used.","'TeamData' is defined but never used.","'FreezePane' is defined but never used.","'count' is assigned a value but never used.","'JerseyColor' is defined but never used.","'currPlayer' is assigned a value but never used.","'currPlayerPos' is assigned a value but never used.","'playersSelected' is assigned a value but never used.","'setPlayersSelected' is assigned a value but never used.","'playerClicked' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'addPlayer', 'props.parentPlayerPos', and 'props.parentPlayerPrice'. Either include them or remove the dependency array. If 'setCurrPlayerPos' needs the current value of 'props.parentPlayerPos', you can also switch to useReducer instead of useState and read 'props.parentPlayerPos' in the reducer.","ArrayExpression",["155"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'scorers' is assigned a value but never used.","'conceded' is assigned a value but never used.","'scored' is assigned a value but never used.","'filled' is assigned a value but never used.","'setFilled' is assigned a value but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'Player' is defined but never used.","'Component' is defined but never used.","'ColumnFilter' is defined but never used.","'GlobalFilter' is defined but never used.","'setGlobalFilter' is assigned a value but never used.","'globalFilter' is assigned a value but never used.","'DialogContent' is defined but never used.","'DialogContentText' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"156","fix":"157"},"Update the dependencies array to be: [addPlayer, props.parentPlayerName, props.parentPlayerPos, props.parentPlayerPrice]",{"range":"158","text":"159"},[9411,9435],"[addPlayer, props.parentPlayerName, props.parentPlayerPos, props.parentPlayerPrice]"]