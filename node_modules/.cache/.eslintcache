[{"/home/blaise/the_odin_project/legends-xi/src/index.js":"1","/home/blaise/the_odin_project/legends-xi/src/App.js":"2","/home/blaise/the_odin_project/legends-xi/src/Data.js":"3","/home/blaise/the_odin_project/legends-xi/src/components/BasicTable.js":"4","/home/blaise/the_odin_project/legends-xi/src/components/COLUMNS.js":"5","/home/blaise/the_odin_project/legends-xi/src/components/FilteringTable.js":"6","/home/blaise/the_odin_project/legends-xi/src/components/GlobalFilter.js":"7","/home/blaise/the_odin_project/legends-xi/src/components/ColumnFilter.js":"8"},{"size":198,"mtime":1627784832762,"results":"9","hashOfConfig":"10"},{"size":9726,"mtime":1628346207909,"results":"11","hashOfConfig":"10"},{"size":4222,"mtime":1628190109188,"results":"12","hashOfConfig":"10"},{"size":1913,"mtime":1628291423684,"results":"13","hashOfConfig":"10"},{"size":418,"mtime":1628349031225,"results":"14","hashOfConfig":"10"},{"size":2374,"mtime":1628348175752,"results":"15","hashOfConfig":"10"},{"size":288,"mtime":1628349006629,"results":"16","hashOfConfig":"10"},{"size":348,"mtime":1628348836297,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"hfhcwn",{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/blaise/the_odin_project/legends-xi/src/index.js",[],["37","38"],"/home/blaise/the_odin_project/legends-xi/src/App.js",["39","40","41","42","43"],"/home/blaise/the_odin_project/legends-xi/src/Data.js",["44"],"// import pg from 'pg';\n\n// let connectionString = \"postgres://blaise:[password]@my_local_server/ip:5432/fifa\";\n// let pgClient = new pg.Client(connectionString);\n// pgClient.connect();\n// let query = pgClient.query(\"SELECT * FROM legends\");\n\n// query.on(\"row\", function(row, result){\n//     result.addRow(row);\n// });\n\n// console.log(result);\n\n// export default Data;\n\nclass Player{\n    constructor(key, name, pos, ovr){\n        this.key = key;\n        this.name = name;\n        this.pos = pos;\n        this.ovr = ovr;\n    }\n}\n\nlet players = {\npele: [\"Pelé\", \"F\", 98],\nmaradona: [\"Diego Maradona\", \"F\", 97],\nzidane: [\"Zinedine Zidane\", \"MID\", 96],\nmaldini : [\"Paolo Maldini\", \"DEF\", 94],\nronaldinho: [\"Ronaldinho\", \"F\", 94],\nmatthaus: [\"Lothar Matthäus\", \"MID\", 93],\ngullit: [\"Ruud Gullit\", \"F\", 93],\nbaresi: [\"Franco Baresi\", \"DEF\", 93],\ndalglish: [\"Kenny Dalglish\", \"F\", 92],\nschmiechel: [\"Peter Schmeichel\", \"GK\", 92],\npiero: [\"Alessandro Del Piero\", \"F\", 92],\nfigo: [\"Luís Figo\",\t \"MID\", \t92],\ncannavaro: [\"Fabio Cannavaro\", \t\"DEF\", \t92],\ngiggs: [\"Ryan Giggs\", \t\"MID\", \t92],\nrush: [\"Ian Rush\", \t\"F\", 91],\ncarlos: [\"Roberto Carlos\", \t\"DEF\", \t91],\nkluivert: [\"Patrick Kluivert\", \t\"F\", 91],\nsar: [\"Edwin van der Sar\", \t\"GK\", \t91],\nshevchenko: [\"Andriy Shevchenko\", \"F\", 91,],\nowen: [\"Michael Owen\", \"F\", 91],\npires: [\"Robert Pirès\", \"MID\", 91],\nseedorf: [\"Clarence Seedorf\", \"MID\", 91],\ndesailly: [\"Marcel Desailly\", \"DEF\", 91],\nshearer: [\"Alan Shearer\", \"F\", 91],\ncantona: [\"Eric Cantona\", \t\"F\", \t90],\nveron: [\"Juan Sebastián Verón\", \t\"MID\", \t90],\nlarsson: [\"Henrik Larsson\", \"F\", 90],\ncrespo: [\"Hernán Crespo\", \t\"F\", \t90],\nmakelele: [\"Claude Makélélé\", \"MID\", \t90],\nzola: [\"Gianfranco Zola\", \"F\", 90],\nkeane: [\"Roy Keane\", \"MID\", 90],\ncambell: [\"Sol Campbell\", \"DEF\", 89],\nhenry: [\"Thierry Henry\", \"F\", 94],\nbuffon: [\"Gianluigi Buffon\", \"GK\", 94],\nnistelrooy: [\"Ruud van Nistelrooy\", \"F\", 92],\nmakaay: [\"Roy Makaay\", \"F\", 91],\ncasillas: [\"Casillas\", \"GK\", 91],\nvieira: [\"Patrick Vieira\", \"MID\", 91],\ntotti: [\"Francesco Totti\", \"F\", 91],\nnesta: [\"Alessandro Nesta\", \"DEF\", 91],\nkahn: [\"Oliver Kahn\", \"GK\", 91],\nmarcos: [\"Marcos\", \"GK\", 90],\nlucio: [\"Lucio\", \"DEF\", \t90],\ngerrard: [\"Steven Gerrard\", \"MID\", 90],\nstam: [\"Jaap Stam\", \"DEF\", 90],\nkaka: [\"Kaká\", \"F\", 89],\nadriano: [\"Adriano\", \"F\", 89],\nronaldo: [\"Ronaldo\", \"F\", 89],\naimar: [\"Pablo César Aimar\", \"F\", 89],\nferdinand: [\"Rio Ferdinand\", \"DEF\", 89],\ntrezeguet: [\"David Trezeguet\", \"F\", 89],\ntoldo: [\"Francesco Toldo\", \"GK\", 89],\nthuram: [\"Lilian Thuram\", \"DEF\", 89],\nscholes: [\"Paul Scholes\", \"MID\", 89],\nvicente: [\"Vicente\", \"MID\", 88],\nvaleron: [\"Valerón\", \"MID\", 88],\nrosicky: [\"Tomás Rosicky\", \"MID\", 88],\nnedved: [\"Pavel Nedved\", \"MID\", 88],\nzambrotta: [\"Gianluca Zambrotta\", \"DEF\", 88],\ngiven: [\"Shay Given\", \"GK\", 88],\ncudicini: [\"Carlo Cudicini\", \"GK\", 88],\nvieri: [\"Christian Vieri\", \"F\", 88],\nraul: [\"Raúl\", \"F\", 87],\ncisse: [\"Djibril Cissé\", \"F\", 87],\nkaragounis: [\"Giorgos Karagounis\", \"MID\", 87],\nnikopolidis: [\"Antonis Nikopolidis\", \"GK\", 87],\nmorientes: [\"Morientes\",  \"F\", 87],\nlampard: [\"Frank Lampard\", \"MID\", 87],\ncafu: [\"Cafú\", \"DEF\", 87],\nbergkamp: [\"Dennis Bergkamp\",  \"F\",  87],\ndida: [\"Dida\",  \"GK\",  87],\nballack: [\"Michael Ballack\", \"MID\", 87],\nbarthez: [\"Fabien Barthez\", \"GK\", 87],\ninzaghi: [\"Filippo Inzaghi\",  \"F\",  87],\nzanetti: [\"J. Zanetti\", \"DEF\", 87],\nbeckham: [\"David Beckham\", \"MID\", 87],\ndeco: [\"Deco\", \"MID\", 86],\ngilberto: [\"Gilberto\", \"MID\", 86],\njoaquin: [\"Joaquín\",  \"MID\",\t 86],\nroberto: [\"Zé Roberto\",  \"MID\", \t86],\nsamuel: [\"Walter Adrián Samuel\",  \"DEF\",  86],\nbuyten: [ \"Daniel Van Buyten\",  \"DEF\",  86],\nhoward: [ \"Tim Howard\",  \"GK\", \t86],\nterry: [ \"John Terry\",\t \"DEF\", \t86],\npirlo: [ \"Andrea Pirlo\", \t\"MID\", \t86]\n};\n\nlet listVals = [];\nlet listKeys = [];\n\nfor(const [key, val] of Object.entries(players)) {\n    listKeys.push(key);\n    listVals.push(val);\n}\n\n// listKeys.push(\"pele\");\n// listVals.push([\"Pelé\", \"F\", 98]);\n\n// listKeys.push(\"maradona\");\n// listVals.push([\"Maradona\", \"F\", 97]);\n\n// Array.from(players).forEeach(p => {\n//     console.log(p);\n// });\n\n// players.forEach((p) => {\n//     console.log(p);\n//     listItems.push(p);\n// });\n\nexport {listVals};\nexport {listKeys};","/home/blaise/the_odin_project/legends-xi/src/components/BasicTable.js",["45"],"import React, {Component, useMemo} from 'react';\nimport {useTable} from 'react-table';\nimport MOCK_DATA from \"./MOCK.DATA.json\";\nimport {COLUMNS} from './COLUMNS.js';\nimport './table.css'\n\nconst BasicTable = () => {\n    const columns = useMemo(() => COLUMNS, []);\n    const data = useMemo(() => MOCK_DATA, []);\n\n    let tableInstance = useTable({\n        columns,\n        data\n    });\n\n    const {getTableProps, getTableBodyProps, headerGroups, rows, prepareRow} = tableInstance;\n    return(\n        <div>\n            <table {...getTableProps()}>\n                <thead>\n                    {\n                        headerGroups.map((headerGroup) => (\n                            <tr {...headerGroup.getHeaderGroupProps}>\n                                {\n                                    headerGroup.headers.map((column) => (\n                                        <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n                                    ))\n                                }\n                                \n                            </tr>\n                        ))\n                    }\n                </thead>\n\n                <tbody {...getTableBodyProps()}>\n                    {\n                        rows.map((row) => {\n                            prepareRow(row);\n                            return (\n                                <tr {...row.getRowProps()}>\n                                    {\n                                        row.cells.map((cell) => {\n                                            return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                                        })\n                                    }\n                                </tr>\n                            )\n                        })\n                    }\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\nexport default BasicTable;","/home/blaise/the_odin_project/legends-xi/src/components/COLUMNS.js",[],"/home/blaise/the_odin_project/legends-xi/src/components/FilteringTable.js",["46","47"],"/home/blaise/the_odin_project/legends-xi/src/components/GlobalFilter.js",[],"/home/blaise/the_odin_project/legends-xi/src/components/ColumnFilter.js",[],{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":5,"column":9,"nodeType":"54","messageId":"55","endLine":5,"endColumn":17},{"ruleId":"52","severity":1,"message":"56","line":6,"column":9,"nodeType":"54","messageId":"55","endLine":6,"endColumn":17},{"ruleId":"52","severity":1,"message":"57","line":10,"column":8,"nodeType":"54","messageId":"55","endLine":10,"endColumn":18},{"ruleId":"52","severity":1,"message":"58","line":118,"column":7,"nodeType":"54","messageId":"55","endLine":118,"endColumn":17},{"ruleId":"52","severity":1,"message":"59","line":169,"column":9,"nodeType":"54","messageId":"55","endLine":169,"endColumn":14},{"ruleId":"52","severity":1,"message":"60","line":16,"column":7,"nodeType":"54","messageId":"55","endLine":16,"endColumn":13},{"ruleId":"52","severity":1,"message":"61","line":1,"column":16,"nodeType":"54","messageId":"55","endLine":1,"endColumn":25},{"ruleId":"52","severity":1,"message":"61","line":1,"column":16,"nodeType":"54","messageId":"55","endLine":1,"endColumn":25},{"ruleId":"52","severity":1,"message":"62","line":7,"column":8,"nodeType":"54","messageId":"55","endLine":7,"endColumn":20},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"no-unused-vars","'listVals' is defined but never used.","Identifier","unusedVar","'listKeys' is defined but never used.","'BasicTable' is defined but never used.","'FreezePane' is defined but never used.","'count' is assigned a value but never used.","'Player' is defined but never used.","'Component' is defined but never used.","'ColumnFilter' is defined but never used.","no-global-assign","no-unsafe-negation"]